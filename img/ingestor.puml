@startuml icisk/ ingestor

entity "k8s" <<(S, SkyBlue)>> {
  + cron job
  + schedules ingestor pygapi
  + done by k8s build-in controller
}
entity " ? manager ? " <<(S, SkyBlue)>> {
  - stilll needed?
  + triggers restart of data serving pygapi
}

entity "INGESTOR-CONFIG" as ingestorconfig <<(C, Yellow)>> { 
  + contains only processes
}

rectangle "ingestor pygapi" as ingestor {
    entity "CDS- process" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "SMHI- process" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "custom FTP- process" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "others..." <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
}


entity "S3" <<(S, LightGoldenRodYellow)>> { 
  + cloud based data 
}

entity "DATA-CONFIG" as dataconfig <<(C, Yellow)>> { 
  + contains only datasources
}

rectangle "data serving pygapi" as dataserv {
    entity "pygapi" <<(D, IndianRed)>> {
        + serves data to clients
    }
}

rectangle "clients" as clients {
    entity "LL Spain app" <<(C, SpringGreen)>> {
        + requests for app
    }
    entity "LL Georgia app" <<(C, SpringGreen)>> {
        + requests for app
    }
    entity "others..." <<(C, SpringGreen)>> {
        + also providing data from other LLs
    }
}

note left of k8s: how does k8s cronjob know about ingestionstatus?
note "can we split the config into 2?" as N1
N1 .. ingestorconfig
N1 .. dataconfig
note left of dataserv: should update resources everytime DATA-CONFIG changes



'manager --> dataserv : restart pod
'k8s -l-> manager
k8s --> ingestor : starts process based on scheduler
ingestorconfig --> ingestor : provides processes information
ingestor --> dataconfig : ingestor updates DATACONFIG
ingestor -d-> S3 : uploads
dataconfig --> dataserv : use CONFIG to serve data
S3 -> dataserv : provides data 
dataserv --> clients : dataflow up on requests
S3 -> clients : clients fetch some data directly from S3 

@enduml

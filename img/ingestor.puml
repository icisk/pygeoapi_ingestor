@startuml icisk/ ingestor

entity "k8s" <<(S, SkyBlue)>> {
  + cron job
  + schedules ingestor pygapi
  + done by k8s build-in controller
}
entity "manager" <<(S, SkyBlue)>> {
  + triggers restart of data serving pygapi
}

rectangle "ingestor pygapi for each data source" as ingestor {
    entity "CDS" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "SMHI" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "custom FTP" <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
    entity "others..." <<(I, DarkRed)>> {
        + transforms data to ZARR/ database
    }
}

entity "S3" <<(S, LightGoldenRodYellow)>> { 
  + cloud based data 
}

entity "CONFIG" <<(C, Yellow)>> { 
  + contains all datasources, processes etc 
}

rectangle "data serving pygapi" as dataserv {
    entity "pygapi" <<(D, IndianRed)>> {
        + serves data to clients
    }
}

rectangle "clients" as clients {
    entity "LL Spain app" <<(C, SpringGreen)>> {
        + requests for app
    }
    entity "LL Georgia app" <<(C, SpringGreen)>> {
        + requests for app
    }
    entity "others..." <<(C, SpringGreen)>> {
        + also providing data from other LLs
    }
}

manager --> dataserv : restart pod
k8s -l-> manager
k8s --> ingestor : starts each container depending on schedule
ingestor --> CONFIG : each ingestor updates CONFIG
ingestor -d-> S3 : uploads
CONFIG --> dataserv : use CONFIG to serve data
S3 -> dataserv : provides data 
dataserv --> clients : dataflow up on requests

@enduml
